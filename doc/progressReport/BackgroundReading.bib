
@article{vande_veire_raw_2018,
	title = {From raw audio to a seamless mix: creating an automated {DJ} system for {Drum} and {Bass}},
	volume = {2018},
	issn = {1687-4722},
	shorttitle = {From raw audio to a seamless mix},
	url = {https://doi.org/10.1186/s13636-018-0134-8},
	doi = {10.1186/s13636-018-0134-8},
	abstract = {We present the open-source implementation of the first fully automatic and comprehensive DJ system, able to generate seamless music mixes using songs from a given library much like a human DJ does.},
	number = {1},
	urldate = {2022-11-16},
	journal = {EURASIP Journal on Audio, Speech, and Music Processing},
	author = {Vande Veire, Len and De Bie, Tijl},
	month = sep,
	year = {2018},
	keywords = {Machine learning, Computational creativity, DJ, Drum and Bass, MIR},
	pages = {13},
	file = {Full Text PDF:/Users/student/Zotero/storage/RYLKRMXC/Vande Veire and De Bie - 2018 - From raw audio to a seamless mix creating an auto.pdf:application/pdf;Snapshot:/Users/student/Zotero/storage/YFBRG2IT/s13636-018-0134-8.html:text/html},
}

@inproceedings{hirai_musicmixer_2015,
	address = {New York, NY, USA},
	series = {{ACE} '15},
	title = {{MusicMixer}: computer-aided {DJ} system based on an automatic song mixing},
	isbn = {978-1-4503-3852-3},
	shorttitle = {{MusicMixer}},
	url = {https://doi.org/10.1145/2832932.2832942},
	doi = {10.1145/2832932.2832942},
	abstract = {In this paper, we present MusicMixer, a computer-aided DJ system that helps DJs, specifically with song mixing. MusicMixer continuously mixes and plays songs using an automatic music mixing method that employs audio similarity calculations. By calculating similarities between song sections that can be naturally mixed, MusicMixer enables seamless song transitions. Though song mixing is the most fundamental and important factor in DJ performance, it is difficult for untrained people to seamlessly connect songs. MusicMixer realizes automatic song mixing using an audio signal processing approach; therefore, users can perform DJ mixing simply by selecting a song from a list of songs suggested by the system, enabling effective DJ song mixing and lowering entry barriers for the inexperienced. We also propose personalization for song suggestions using a preference memorization function of MusicMixer.},
	urldate = {2022-11-16},
	booktitle = {Proceedings of the 12th {International} {Conference} on {Advances} in {Computer} {Entertainment} {Technology}},
	publisher = {Association for Computing Machinery},
	author = {Hirai, Tatsunori and Doi, Hironori and Morishima, Shigeo},
	month = nov,
	year = {2015},
	keywords = {automatic song mixing, computer-aided DJ system, human-content interaction},
	pages = {1--5},
	file = {Full Text PDF:/Users/student/Zotero/storage/3ZECJWW5/Hirai et al. - 2015 - MusicMixer computer-aided DJ system based on an a.pdf:application/pdf},
}

@inproceedings{hirai_musicmixer_2016,
	address = {Berlin, Heidelberg},
	series = {{MMM} 2016},
	title = {{MusicMixer}: {Automatic} {DJ} {System} {Considering} {Beat} and {Latent} {Topic} {Similarity}},
	isbn = {978-3-319-27670-0},
	shorttitle = {{MusicMixer}},
	url = {https://doi.org/10.1007/978-3-319-27671-7_59},
	doi = {10.1007/978-3-319-27671-7_59},
	abstract = {This paper presents MusicMixer, an automatic DJ system that mixes songs in a seamless manner. MusicMixer mixes songs based on audio similarity calculated via beat analysis and latent topic analysis of the chromatic signal in the audio. The topic represents latent semantics about how chromatic sounds are generated. Given a list of songs, a DJ selects a song with beat and sounds similar to a specific point of the currently playing song to seamlessly transition between songs. By calculating the similarity of all existing pairs of songs, the proposed system can retrieve the best mixing point from innumerable possibilities. Although it is comparatively easy to calculate beat similarity from audio signals, it has been difficult to consider the semantics of songs as a human DJ considers. To consider such semantics, we propose a method to represent audio signals to construct topic models that acquire latent semantics of audio. The results of a subjective experiment demonstrate the effectiveness of the proposed latent semantic analysis method.},
	urldate = {2022-11-16},
	booktitle = {Proceedings, {Part} {I}, of the 22nd {International} {Conference} on {MultiMedia} {Modeling} - {Volume} 9516},
	publisher = {Springer-Verlag},
	author = {Hirai, Tatsunori and Doi, Hironori and Morishima, Shigeo},
	month = jan,
	year = {2016},
	keywords = {Machine learning, Beat similarity, DJ system, Latent topic analysis, Song mixing},
	pages = {698--709},
}

@book{kim_automatic_2017,
	title = {Automatic {DJ} {Mix} {Generation} {Using} {Highlight} {Detection}},
	abstract = {We demonstrate a fully automated system that generates DJ mixes from an arbitrary pool of audio tracks. Our goal is to offer a framework which automatically provides a high-quality endless mix of musical tracks without user supervision , given a seed track. To achieve this, we follow a filter and rank-based approach which selects the best-matching clip of a song to mix with the given seed track. We applied state-of-the-art musical information retrieval (MIR) methods including deep learning-based approaches such as automatic highlight extraction and key-tempo estimation for extracting cue points, choosing transition methods , and selecting audio clips. The results show that the proposed system can automatically generate competitive DJ mix contents plausible for users to enjoy.},
	author = {Kim, Adrian and Park, Soram and Park, Jangyeon and Ha, Jung-Woo and Kwon, Taegyun and Nam, Juhan},
	month = oct,
	year = {2017},
}

@article{kim_joint_2022,
	title = {Joint {Estimation} of {Fader} and {Equalizer} {Gains} of {DJ} {Mixers} {Using} {Convex} {Optimization}},
	abstract = {Disc jockeys (DJs) use audio effects to make a smooth transition from one song to another. There have been attempts to computationally analyze the creative process of seamless mixing. However, only a few studies estimated fader or equalizer (EQ) gains controlled by DJs. In this study, we propose a method that jointly estimates time-varying fader and EQ gains so as to reproduce the mix from individual source tracks. The method approximates the equalizer filters with a linear combination of a fixed equalizer filter and a constant gain to convert the joint estimation into a convex optimization problem. For the experiment, we collected a new DJ mix dataset that consists of 5,040 real-world DJ mixes with 50,742 transitions, and evaluated the proposed method with a mix reconstruction error. The result shows that the proposed method estimates the time-varying fader and equalizer gains more accurately than existing methods and simple baselines.},
	language = {en},
	author = {Kim, Taejun and Yang, Yi-Hsuan and Nam, Juhan},
	year = {2022},
	pages = {8},
	file = {Kim et al. - 2022 - Joint Estimation of Fader and Equalizer Gains of D.pdf:/Users/student/Zotero/storage/AIT56ABP/Kim et al. - 2022 - Joint Estimation of Fader and Equalizer Gains of D.pdf:application/pdf},
}

@misc{chang_building_2021,
	title = {Building a {Song} {Recommendation} {System} with {Spotify}},
	url = {https://towardsdatascience.com/part-iii-building-a-song-recommendation-system-with-spotify-cf76b52705e7},
	abstract = {Do you ever wonder how the section, “Recommended (based on what’s in your playlist),” on your Spotify works? This article solves part of…},
	language = {en},
	urldate = {2022-12-28},
	journal = {Medium},
	author = {Chang, Eric},
	month = dec,
	year = {2021},
	file = {Snapshot:/Users/student/Zotero/storage/8W8DTUXR/part-iii-building-a-song-recommendation-system-with-spotify-cf76b52705e7.html:text/html},
}

@misc{chow_music_2020,
	title = {Music {Recommendation} {System} for {DJs} {Part} 2},
	url = {https://ai.plainenglish.io/music-recommendation-system-for-djs-part-2-db14e7ece6ea},
	abstract = {In my last article, I explained how we can use Matrix Factorisation to find songs which sound similar. However, this only works if we have…},
	language = {en},
	urldate = {2022-12-28},
	journal = {Artificial Intelligence in Plain English},
	author = {Chow, Daniel},
	month = apr,
	year = {2020},
	file = {Snapshot:/Users/student/Zotero/storage/CS4HB9FV/music-recommendation-system-for-djs-part-2-db14e7ece6ea.html:text/html},
}

@misc{chow_music_2020-1,
	title = {Music {Recommendation} {System} for {DJs}},
	url = {https://python.plainenglish.io/music-recommendation-system-for-djs-d253d472677e},
	abstract = {Using Matrix Factorisation to find music},
	language = {en},
	urldate = {2022-12-28},
	journal = {Medium},
	author = {Chow, Daniel},
	month = apr,
	year = {2020},
	file = {Snapshot:/Users/student/Zotero/storage/KG8JGJ4L/music-recommendation-system-for-djs-d253d472677e.html:text/html},
}

@article{koren_matrix_2009,
	title = {Matrix {Factorization} {Techniques} for {Recommender} {Systems}},
	volume = {42},
	issn = {1558-0814},
	doi = {10.1109/MC.2009.263},
	abstract = {As the Netflix Prize competition has demonstrated, matrix factorization models are superior to classic nearest neighbor techniques for producing product recommendations, allowing the incorporation of additional information such as implicit feedback, temporal effects, and confidence levels.},
	number = {8},
	journal = {Computer},
	author = {Koren, Yehuda and Bell, Robert and Volinsky, Chris},
	month = aug,
	year = {2009},
	note = {Conference Name: Computer},
	keywords = {Collaboration, Bioinformatics, Computational intelligence, Filtering, Genomics, Matrix factorization, Motion pictures, Nearest neighbor searches, Netflix Prize, Predictive models, Recommender systems, Sea measurements},
	pages = {30--37},
	file = {IEEE Xplore Abstract Record:/Users/student/Zotero/storage/9C9IHXZ8/5197422.html:text/html;IEEE Xplore Full Text PDF:/Users/student/Zotero/storage/V8LAAEPU/Koren et al. - 2009 - Matrix Factorization Techniques for Recommender Sy.pdf:application/pdf},
}

@inproceedings{zhou_large-scale_2008,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Large-{Scale} {Parallel} {Collaborative} {Filtering} for the {Netflix} {Prize}},
	isbn = {978-3-540-68880-8},
	doi = {10.1007/978-3-540-68880-8_32},
	abstract = {Many recommendation systems suggest items to users by utilizing the techniques of collaborative filtering (CF) based on historical records of items that the users have viewed, purchased, or rated. Two major problems that most CF approaches have to contend with are scalability and sparseness of the user profiles. To tackle these issues, in this paper, we describe a CF algorithm alternating-least-squares with weighted-λ-regularization (ALS-WR), which is implemented on a parallel Matlab platform. We show empirically that the performance of ALS-WR (in terms of root mean squared error (RMSE)) monotonically improves with both the number of features and the number of ALS iterations. We applied the ALS-WR algorithm on a large-scale CF problem, the Netflix Challenge, with 1000 hidden features and obtained a RMSE score of 0.8985, which is one of the best results based on a pure method. In addition, combining with the parallel version of other known methods, we achieved a performance improvement of 5.91\% over Netflix’s own CineMatch recommendation system. Our method is simple and scales well to very large datasets.},
	language = {en},
	booktitle = {Algorithmic {Aspects} in {Information} and {Management}},
	publisher = {Springer},
	author = {Zhou, Yunhong and Wilkinson, Dennis and Schreiber, Robert and Pan, Rong},
	editor = {Fleischer, Rudolf and Xu, Jinhui},
	year = {2008},
	keywords = {Rating Matrix, Recommendation System, Root Mean Square Error, Singular Value Decomposition, Test Dataset},
	pages = {337--348},
	file = {Full Text PDF:/Users/student/Zotero/storage/2SU98WG4/Zhou et al. - 2008 - Large-Scale Parallel Collaborative Filtering for t.pdf:application/pdf},
}

@article{aspillaga_mixme_nodate,
	title = {{MIXME}: {A} {RECOMMENDATION} {SYSTEM} {FOR} {DJS}},
	language = {en},
	author = {Aspillaga, Felipe X and Cobb, Jonathan and Chuan, Ching-Hua},
	file = {Aspillaga et al. - MIXME A RECOMMENDATION SYSTEM FOR DJS.pdf:/Users/student/Zotero/storage/IWB4VP26/Aspillaga et al. - MIXME A RECOMMENDATION SYSTEM FOR DJS.pdf:application/pdf},
}

@article{jensenius_proceedings_2011,
	title = {Proceedings of the {International} {Conference} on {New} {Interfaces} for {Musical} {Expression} - 30 {May} - 1 {June} 2011},
	abstract = {We present BeatJockey, a prototype interface which makes use of Audio Mosaicing (AM), beat-tracking and machine learning techniques, for supporting Diskjockeys (DJs) by proposing them new ways of interaction with the songs on the DJ’s playlist. This prototype introduces a new paradigm to DJing in which the user has the capability to mix songs interacting with beat-units that accompany the DJ’s mix. For this type of interaction, the system suggests song slices taken from songs selected from a playlist, which could go well with the beats of whatever master song is being played. In addition the system allows the synchronization of multiple songs, thus permitting ﬂexible, coherent and rapid progressions in the DJ’s mix. BeatJockey uses the Reactable, a musical tangible user interface (TUI), and it has been designed to be used by all DJs regardless of their level of expertise, as the system helps the novice while bringing new creative opportunities to the expert.},
	language = {en},
	author = {Jensenius, Alexander Refsum},
	year = {2011},
	file = {Jensenius - 2011 - Proceedings of the International Conference on New.pdf:/Users/student/Zotero/storage/XHVFIWTS/Jensenius - 2011 - Proceedings of the International Conference on New.pdf:application/pdf},
}

@inproceedings{omowonuola_hybrid_2023,
	address = {Cham},
	series = {Lecture {Notes} in {Networks} and {Systems}},
	title = {Hybrid {Context}-{Content} {Based} {Music} {Recommendation} {System}},
	isbn = {978-3-031-18461-1},
	doi = {10.1007/978-3-031-18461-1_8},
	abstract = {Due to the increase in technology and research over the past few decades, music had become increasingly available to the public, but with a vast selection available, it becomes challenging to choose the songs to listen too. From research done on music recommendation systems (MRS), there are three main methods to recommend songs; context based, content based and collaborative filtering. A hybrid combination of the three methods has the potential to improve music recommendation; however, it has not been fully explored. In this paper, a hybrid music recommendation system, using emotion as the context and musical data as content is proposed. To achieve this, the outputs of a convolution neural network (CNN) and a weight extraction method are combined. The CNN extracts user emotion from a favorite playlist and extracts audio features from the songs and metadata. The output of the user emotion and audio features is combined, and a collaborative filtering method is used to select the best song for recommendation. For performance, proposed recommendation system is compared with content similarity music recommendation system (CSMRS) as well as other personalized music recommendation systems.},
	language = {en},
	booktitle = {Proceedings of the {Future} {Technologies} {Conference} ({FTC}) 2022, {Volume} 1},
	publisher = {Springer International Publishing},
	author = {Omowonuola, Victor and Wilkerson, Bryce and Kher, Shubhalaxmi},
	editor = {Arai, Kohei},
	year = {2023},
	keywords = {Convolutional neural network, Emotion recognition, Mel-spectrogram, Music recommendation system, Valence-arousal model},
	pages = {121--132},
}

@inproceedings{fessahaye_t-recsys_2019,
	title = {T-{RECSYS}: {A} {Novel} {Music} {Recommendation} {System} {Using} {Deep} {Learning}},
	shorttitle = {T-{RECSYS}},
	doi = {10.1109/ICCE.2019.8662028},
	abstract = {A recommendation system is a program that utilizes techniques to suggest to a user items that they would likely prefer. This paper focuses on an approach to improving music recommendation systems, although the proposed solution could be applied to many different platforms and domains, including Youtube (videos), Netflix (movies), Amazon (shopping), etc. Current systems lack adequate efficiency once more variables are introduced. Our algorithm, Tunes Recommendation System (T-RECSYS), uses a hybrid of content-based and collaborative filtering as input to a deep learning classification model to produce an accurate recommendation system with real-time prediction. We apply our approach to data obtained from the Spotify Recsys Challenge, attaining precision scores as high as 88\% at a balanced discrimination threshold.},
	booktitle = {2019 {IEEE} {International} {Conference} on {Consumer} {Electronics} ({ICCE})},
	author = {Fessahaye, Ferdos and Perez, Luis and Zhan, Tiffany and Zhang, Raymond and Fossier, Calais and Markarian, Robyn and Chiu, Carter and Zhan, Justin and Gewali, Laxmi and Oh, Paul},
	month = jan,
	year = {2019},
	note = {ISSN: 2158-4001},
	keywords = {Collaboration, collaborative filtering, content-based filtering, deep learning, Deep learning, Metadata, Mood, music recommendation, Neural networks, Real-time systems, Training},
	pages = {1--6},
	file = {IEEE Xplore Abstract Record:/Users/student/Zotero/storage/33CK5VIK/8662028.html:text/html;IEEE Xplore Full Text PDF:/Users/student/Zotero/storage/BAGXVCZT/Fessahaye et al. - 2019 - T-RECSYS A Novel Music Recommendation System Usin.pdf:application/pdf},
}

@misc{watts_extracting_2022,
	title = {Extracting {Song} {Data} {From} the {Spotify} {API} {Using} {Python}},
	url = {https://towardsdatascience.com/extracting-song-data-from-the-spotify-api-using-python-b1e79388d50},
	abstract = {Taking advantage of the data Spotify keeps on its library, and using this for our machine learning projects},
	language = {en},
	urldate = {2023-01-07},
	journal = {Medium},
	author = {Watts, Cameron},
	month = feb,
	year = {2022},
	file = {Snapshot:/Users/student/Zotero/storage/JLBPJUSC/extracting-song-data-from-the-spotify-api-using-python-b1e79388d50.html:text/html},
}

@misc{chang_building_2021-1,
	title = {Building a {Song} {Recommendation} {System} with {Spotify}},
	url = {https://towardsdatascience.com/part-iii-building-a-song-recommendation-system-with-spotify-cf76b52705e7},
	abstract = {Do you ever wonder how the section, “Recommended (based on what’s in your playlist),” on your Spotify works? This article solves part of…},
	language = {en},
	urldate = {2023-01-07},
	journal = {Medium},
	author = {Chang, Eric},
	month = dec,
	year = {2021},
	file = {Snapshot:/Users/student/Zotero/storage/A38TBJBD/part-iii-building-a-song-recommendation-system-with-spotify-cf76b52705e7.html:text/html},
}

@inproceedings{anderson_algorithmic_2020,
	address = {Taipei Taiwan},
	title = {Algorithmic {Effects} on the {Diversity} of {Consumption} on {Spotify}},
	isbn = {978-1-4503-7023-3},
	url = {https://dl.acm.org/doi/10.1145/3366423.3380281},
	doi = {10.1145/3366423.3380281},
	language = {en},
	urldate = {2023-01-07},
	booktitle = {Proceedings of {The} {Web} {Conference} 2020},
	publisher = {ACM},
	author = {Anderson, Ashton and Maystre, Lucas and Anderson, Ian and Mehrotra, Rishabh and Lalmas, Mounia},
	month = apr,
	year = {2020},
	pages = {2155--2165},
	file = {Anderson et al. - 2020 - Algorithmic Effects on the Diversity of Consumptio.pdf:/Users/student/Zotero/storage/IDHFJYAS/Anderson et al. - 2020 - Algorithmic Effects on the Diversity of Consumptio.pdf:application/pdf},
}

@inproceedings{van_den_oord_deep_2013,
	title = {Deep content-based music recommendation},
	volume = {26},
	url = {https://proceedings.neurips.cc/paper/2013/hash/b3ba8f1bee1238a2f37603d90b58898d-Abstract.html},
	abstract = {Automatic music recommendation has become an increasingly relevant problem in recent years, since a lot of music is now sold and consumed digitally. Most recommender systems rely on collaborative filtering. However, this approach suffers from the cold start problem: it fails when no usage data is available, so it is not effective for recommending new and unpopular songs. In this paper, we propose to use a latent factor model for recommendation, and predict the latent factors from music audio when they cannot be obtained from usage data. We compare a traditional approach using a bag-of-words representation of the audio signals with deep convolutional neural networks, and evaluate the predictions quantitatively and qualitatively on the Million Song Dataset. We show that using predicted latent factors produces sensible recommendations, despite the fact that there is a large semantic gap between the characteristics of a song that affect user preference and the corresponding audio signal. We also show that recent advances in deep learning translate very well to the music recommendation setting, with deep convolutional neural networks significantly outperforming the traditional approach.},
	urldate = {2023-01-07},
	booktitle = {Advances in {Neural} {Information} {Processing} {Systems}},
	publisher = {Curran Associates, Inc.},
	author = {van den Oord, Aaron and Dieleman, Sander and Schrauwen, Benjamin},
	year = {2013},
	file = {Full Text PDF:/Users/student/Zotero/storage/NJP9UCV5/van den Oord et al. - 2013 - Deep content-based music recommendation.pdf:application/pdf},
}

@misc{piyush_building_2019,
	title = {Building {Music} {Playlists} {Recommendation} {System}},
	url = {https://towardsdatascience.com/building-music-playlists-recommendation-system-564a3e63ef64},
	abstract = {Content taken from  our paper titled “Representation, Exploration, and Recommendation Of Music Playlists”},
	language = {en},
	urldate = {2023-01-07},
	journal = {Medium},
	author = {Piyush},
	month = sep,
	year = {2019},
	file = {Snapshot:/Users/student/Zotero/storage/7GCRWIU6/building-music-playlists-recommendation-system-564a3e63ef64.html:text/html},
}

@misc{kirn_review_2023,
	title = {In {Review}: {Serato} {Stems} · {Feature} {RA}},
	shorttitle = {In {Review}},
	url = {https://ra.co/features/4105},
	abstract = {The latest version of Serato's machine learning-powered software has finally made DJing with stems a reality.},
	language = {en},
	urldate = {2023-01-07},
	journal = {Resident Advisor},
	author = {Kirn, Peter},
	year = {2023},
	file = {Snapshot:/Users/student/Zotero/storage/EGAYCQ2H/4105.html:text/html},
}

@misc{noauthor_main_nodate,
	title = {Main {Page}},
	url = {//www.mixesdb.com/w/Main_Page},
	language = {en},
	urldate = {2023-01-07},
	journal = {MixesDB − The database for mixes},
	file = {Snapshot:/Users/student/Zotero/storage/9QYS3IM6/Main_Page.html:text/html},
}

@inproceedings{lesota_analyzing_2021,
	address = {Amsterdam Netherlands},
	title = {Analyzing {Item} {Popularity} {Bias} of {Music} {Recommender} {Systems}: {Are} {Different} {Genders} {Equally} {Affected}?},
	isbn = {978-1-4503-8458-2},
	shorttitle = {Analyzing {Item} {Popularity} {Bias} of {Music} {Recommender} {Systems}},
	url = {https://dl.acm.org/doi/10.1145/3460231.3478843},
	doi = {10.1145/3460231.3478843},
	language = {en},
	urldate = {2023-01-07},
	booktitle = {Fifteenth {ACM} {Conference} on {Recommender} {Systems}},
	publisher = {ACM},
	author = {Lesota, Oleg and Melchiorre, Alessandro and Rekabsaz, Navid and Brandl, Stefan and Kowald, Dominik and Lex, Elisabeth and Schedl, Markus},
	month = sep,
	year = {2021},
	pages = {601--606},
	file = {Lesota et al. - 2021 - Analyzing Item Popularity Bias of Music Recommende.pdf:/Users/student/Zotero/storage/ZBPK4ZS8/Lesota et al. - 2021 - Analyzing Item Popularity Bias of Music Recommende.pdf:application/pdf},
}

@misc{noauthor_backtesting_nodate,
	title = {Backtesting: {Definition}, {How} {It} {Works}, and {Downsides}},
	shorttitle = {Backtesting},
	url = {https://www.investopedia.com/terms/b/backtesting.asp},
	abstract = {Backtesting evaluates the effectiveness of a trading strategy by running it against historical data to see how it would have fared.},
	language = {en},
	urldate = {2023-01-08},
	journal = {Investopedia},
	file = {Snapshot:/Users/student/Zotero/storage/JJAU33UC/backtesting.html:text/html},
}

@article{olorunnimbe_deep_2022,
	title = {Deep learning in the stock market—a systematic survey of practice, backtesting, and applications},
	issn = {1573-7462},
	url = {https://doi.org/10.1007/s10462-022-10226-0},
	doi = {10.1007/s10462-022-10226-0},
	abstract = {The widespread usage of machine learning in different mainstream contexts has made deep learning the technique of choice in various domains, including finance. This systematic survey explores various scenarios employing deep learning in financial markets, especially the stock market. A key requirement for our methodology is its focus on research papers involving backtesting. That is, we consider whether the experimentation mode is sufficient for market practitioners to consider the work in a real-world use case. Works meeting this requirement are distributed across seven distinct specializations. Most studies focus on trade strategy, price prediction, and portfolio management, with a limited number considering market simulation, stock selection, hedging strategy, and risk management. We also recognize that domain-specific metrics such as “returns” and “volatility” appear most important for accurately representing model performance across specializations. Our study demonstrates that, although there have been some improvements in reproducibility, substantial work remains to be done regarding model explainability. Accordingly, we suggest several future directions, such as improving trust by creating reproducible, explainable, and accountable models and emphasizing prediction of longer-term horizons—potentially via the utilization of supplementary data—which continues to represent a significant unresolved challenge.},
	language = {en},
	urldate = {2023-01-08},
	journal = {Artificial Intelligence Review},
	author = {Olorunnimbe, Kenniy and Viktor, Herna},
	month = jun,
	year = {2022},
	keywords = {Backtesting, Deep learning, Financial market, Machine learning, Neural network, Practice and application, Quantitative analysis, Stock market},
	file = {Full Text PDF:/Users/student/Zotero/storage/BL8FND6C/Olorunnimbe and Viktor - 2022 - Deep learning in the stock market—a systematic sur.pdf:application/pdf},
}

@misc{aicrowd_aicrowd_2023,
	title = {{AIcrowd} {\textbar} {Spotify} {Million} {Playlist} {Dataset} {Challenge} {\textbar} {Challenges}},
	url = {https://www.aicrowd.com/challenges/spotify-million-playlist-dataset-challenge},
	abstract = {A dataset and open-ended challenge for music recommendation research},
	language = {en},
	urldate = {2023-01-08},
	journal = {AIcrowd {\textbar} Spotify Million Playlist Dataset Challenge {\textbar} Challenges},
	author = {AIcrowd},
	year = {2023},
	file = {Snapshot:/Users/student/Zotero/storage/3UCPUAGF/spotify-million-playlist-dataset-challenge.html:text/html},
}

@inproceedings{chen_recsys_2018,
	address = {Vancouver British Columbia Canada},
	title = {Recsys challenge 2018: automatic music playlist continuation},
	isbn = {978-1-4503-5901-6},
	shorttitle = {Recsys challenge 2018},
	url = {https://dl.acm.org/doi/10.1145/3240323.3240342},
	doi = {10.1145/3240323.3240342},
	abstract = {The ACM Recommender Systems Challenge 2018 focused on automatic music playlist continuation, which is a form of the more general task of sequential recommendation. Given a playlist of arbitrary length, the challenge was to recommend up to 500 tracks that fit the target characteristics of the original playlist. For the Challenge, Spotify released a dataset of one million user-created playlists, along with associated metadata. Participants could submit their approaches in two tracks, i.e., main and creative tracks, where the former allowed teams to use solely the provided dataset and the latter allowed them to exploit publicly available external data too. In total, 113 teams submitted 1,228 runs in the main track; 33 teams submitted 239 runs in the creative track. The highest performing team in the main track achieved an R-precision of 0.2241, an NDCG of 0.3946, and an average number of recommended songs clicks of 1.784. In the creative track, an R-precision of 0.2233, an NDCG of 0.3939, and a click rate of 1.785 was realized by the best team.},
	language = {en},
	urldate = {2023-01-08},
	booktitle = {Proceedings of the 12th {ACM} {Conference} on {Recommender} {Systems}},
	publisher = {ACM},
	author = {Chen, Ching-Wei and Lamere, Paul and Schedl, Markus and Zamani, Hamed},
	month = sep,
	year = {2018},
	pages = {527--528},
	file = {Chen et al. - 2018 - Recsys challenge 2018 automatic music playlist co.pdf:/Users/student/Zotero/storage/894EKZ2E/Chen et al. - 2018 - Recsys challenge 2018 automatic music playlist co.pdf:application/pdf},
}
